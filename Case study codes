Case Study #1 - Danny's Diner

-- 1. What is the total amount each customer spent at the restaurant?

select s.customer_id,sum(m.price)
from sales s
join menu m
on s.product_id=m.product_id
group by customer_id;

-- 2. How many days has each customer visited the restaurant?

select count(*) as customer_visit,customer_id
from sales
group by customer_id;

-- 3. What was the first item from the menu purchased by each customer?
with cte as (
			select *,
			rank () over(partition by customer_id order by order_date) as rnk
			from sales
    )
    
select * from cte
where rnk =1;

-- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?

select count(s.product_id) as product_purchase_count,m.product_name
from sales s
join menu m on
s.product_id=m.product_id
group by s.product_id
order by product_purchase_count desc
limit 1 ;

-- 5. Which item was the most popular for each customer?

-- 6. Which item was purchased first by the customer after they became a member?

with CTE as
(
			SELECT s.customer_id ,m.join_date,s.order_date,me.product_id,me.product_name,
			row_number() over(partition by s.customer_id order by s.customer_id,s.order_date) as rn
			FROM members m
			right join sales s
			on m.customer_id=s.customer_id
			join menu me
			on me.product_id=s.product_id
			where m.customer_id  is not null and
			s.order_date>m.join_date
)

select customer_id,product_name from cte
where rn=1;

-- 7. Which item was purchased just before the customer became a member?

with CTE as
(
			SELECT s.customer_id ,m.join_date,s.order_date,me.product_id,me.product_name,
			rank() over(partition by s.customer_id order by s.customer_id,s.order_date) as rn
			FROM members m
			right join sales s
			on m.customer_id=s.customer_id
			join menu me
			on me.product_id=s.product_id
			where m.customer_id  is not null and
			s.order_date<m.join_date
)

select customer_id,product_name from cte
where rn=1;

-- 8. What is the total items and amount spent for each member before they became a member?

SELECT s.customer_id ,count(me.product_id) as total_items,sum(me.price) as amount_spent
			FROM members m
			right join sales s
			on m.customer_id=s.customer_id
			join menu me
			on me.product_id=s.product_id
			where m.customer_id  is not null and
			s.order_date<m.join_date
            group by s.customer_id
order by s.customer_id,s.order_date;

-- 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?


with cte as 
(
			select s.customer_id,
			 s.product_id,
			 m.product_name,
			 m.price,
			 if (m.product_name='sushi',20*m.price,10*m.price) as points
			from sales s 
			join menu m
			on m.product_id=s.product_id
)
select customer_id,sum(points) from cte
group by customer_id;

-- 10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, 
-- not just sushi - how many points do customer A and B have at the end of January?

with cte as
(
				SELECT  s.customer_id,
			 s.product_id,
			 me.product_name,
			 me.price,
                me.price*20 as points
							FROM members m
							right join sales s
							on m.customer_id=s.customer_id
							join menu me
							on me.product_id=s.product_id
							where m.customer_id  is not null and
							s.order_date >= m.join_date and s.order_date <= m.join_date + 7
				            order by s.customer_id,s.order_date
)
select customer_id,sum(points) from cte
group by customer_id 
